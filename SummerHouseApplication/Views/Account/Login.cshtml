@using System.Collections.Generic
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@model LoginViewModel
@inject SignInManager<SummerHouseUser> SignInManager

<h2>Kirjaudu sisään</h2>
<form asp-controller="Account"
      asp-action="Login"
      asp-route-returnurl="@ViewData["ReturnUrl"]"
      method="post">
    <div class="row">
        <div asp-validation-summary="All"></div>
        <div class="input-field col s12">
            <i class="material-icons prefix">contact_mail</i>
            <input id="Username" name="Username" type="text">
            <label for="Username">Käyttäjänimi</label>
        </div>
            <div class="input-field col s12">
                <i class="material-icons prefix">lock</i>
                <input id="Password" name="Password" type="password">
                <label for="Password">Salasana</label>
            </div>
        </div>

        <div class="input-field">
            <button class="btn blue" type="submit">Kirjaudu</button>
        </div>
        <div class="input-field">

            <a class="btn blue" asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]">Rekisteröidy</a>

        </div>
</form>


@*<div>
        <section>
            <h4>Use another service to log in.</h4>
            <hr />
            @{
                var loginProviders = SignInManager.GetExternalAuthenticationSchemes().ToList();
                if (loginProviders.Count == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                            for details on setting up this ASP.NET application to support logging in via external services.
                        </p>
                    </div>
                }
                else
                {
                    <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in loginProviders)
                                {
                                    <button type="submit" class="btn btn-default" name="provider" value="@provider.AuthenticationScheme" title="Log in using your @provider.DisplayName account">@provider.AuthenticationScheme</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>*@

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
